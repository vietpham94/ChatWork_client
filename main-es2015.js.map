{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/commons/common.ts","./src/app/commons/enum/api-status.enum.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.module.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.module.ts","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.module.ts","./src/app/components/reset-password/reset-password.component.ts","./src/app/components/reset-password/reset-password.component.html","./src/app/components/reset-password/reset-password.module.ts","./src/app/services/api/api.service.ts","./src/app/services/auth/auth-guard.service.ts","./src/app/services/auth/auth.service.ts","./src/app/services/auth/role-guard.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'chatwork';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { AuthGuardService } from './services/auth/auth-guard.service';\r\nimport { RoleGuardService } from './services/auth/role-guard.service';\r\nimport { ApiService } from './services/api/api.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ROUTES } from './app.routes';\r\n\r\nimport { HomeModule } from './components/home/home.module';\r\nimport { ProfileModule } from './components/profile/profile.module';\r\nimport { RegisterModule } from './components/register/register.module';\r\nimport { LoginModule } from './components/login/login.module';\r\nimport { ResetPasswordModule } from './components/reset-password/reset-password.module';\r\n\r\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\nimport {\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider,\r\n} from 'angularx-social-login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(ROUTES),\r\n    HomeModule,\r\n    LoginModule,\r\n    RegisterModule,\r\n    ProfileModule,\r\n    ResetPasswordModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule,\r\n    SocialLoginModule,\r\n  ],\r\n  providers: [\r\n    AuthGuardService,\r\n    AuthService,\r\n    RoleGuardService,\r\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n    JwtHelperService,\r\n    ApiService,\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider('2965647346823367'),\r\n          },\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider('159957289052-k9qaa2dp92avv931ae5vuo9va7upfelp.apps.googleusercontent.com'),\r\n          },\r\n        ],\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// Angular module\r\nimport { Routes } from '@angular/router';\r\n\r\n// Services\r\nimport { AuthGuardService as AuthGuard } from './services/auth/auth-guard.service';\r\nimport { RoleGuardService as RoleGuard } from './services/auth/role-guard.service';\r\n\r\n// Components\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\n\r\n// Commons\r\nimport { Common } from './commons/common';\r\n\r\n\r\nexport const ROUTES: Routes = [\r\n  {\r\n    path: Common.PATHS.login,\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: Common.PATHS.register,\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: Common.PATHS.home,\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: Common.PATHS.profile,\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: Common.PATHS.resetPassword,\r\n    component: ResetPasswordComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: Common.PATHS.home\r\n  }\r\n];\r\n","export class Common {\r\n  public static PATHS = {\r\n    home: '',\r\n    profile: 'profile',\r\n    login: 'login',\r\n    register: 'register',\r\n    resetPassword: 'reset-password'\r\n  };\r\n\r\n  public static KEYS = {\r\n    token: 'token',\r\n    email: 'email',\r\n    password: 'password',\r\n    confirm: 'confirm',\r\n    profile: 'profile',\r\n  };\r\n\r\n  public static API = {\r\n    login: '/api/login',\r\n    signup: '/api/signup',\r\n    userList: '/api/user',\r\n    facebookLogin: '/api/social-signin/facebook',\r\n    googleLogin: '/api/social-signin/google',\r\n    logout: '/api/logout',\r\n  };\r\n}\r\n","export enum ApiStatus {\r\n  SUCCESS = 200,\r\n  ERROR = 500,\r\n  AUTH_FAIL = 401\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SocialAuthService, SocialUser, GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\r\n\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { Common } from '../../commons/common';\r\nimport { ApiStatus } from '../../commons/enum/api-status.enum';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  user: SocialUser;\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private authSocialService: SocialAuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.authService.getProfile();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    // Unsubscribe from the subject\r\n    this.destroy$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Logout\r\n   *\r\n   * @memberof HomeComponent\r\n   */\r\n  public logout() {\r\n    // Call login API\r\n    this.apiService.senPostRequestAuth(Common.API.logout, {})\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((data: any) => {\r\n        if (data.status === ApiStatus.SUCCESS) {\r\n          if (this.authService.isNotRefresh) {\r\n            this.authSocialService.signOut();\r\n          } else {\r\n            this.authService.removeToken();\r\n            this.router.navigate([Common.PATHS.login]);\r\n          }\r\n        } else {\r\n          console.error(data.status);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<header class=\"main-header\">\r\n  <nav class=\"navbar navbar-expand-lg navbar-light w-100\">\r\n    <div id=\"logo\">\r\n      <a href=\"#\">\r\n        <img src=\"../../../assets/images/logo_hz.png\" alt=\"logo\">\r\n      </a>\r\n    </div>\r\n\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mx-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link text-white\" href=\"#\">Profile<span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link text-white\" href=\"#\">Friends</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link text-white\" href=\"#\">Favorites</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"header-right\">\r\n        <div class=\"dropdown ml-auto\">\r\n          <a href=\"#\" data-toggle=\"dropdown\">\r\n            <span class=\"mr-2 d-none d-sm-inline-block text-white\">{{user ? user.name : ''}}</span>\r\n            <figure class=\"avatar\">\r\n              <img [src]=\"user ? user.photoUrl : '../../../assets/images/avatar3.png'\" class=\"rounded-circle\" alt=\"image\">\r\n            </figure>\r\n          </a>\r\n          <div class=\"dropdown-menu dropdown-menu-right\">\r\n            <a href=\"#\" class=\"dropdown-item\" data-navigation-target=\"contact-information\">Profile</a>\r\n            <a href=\"#\" class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#settingModal\">Settings</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item cursor-pointer text-primary\" (click)=\"logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from './home.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [HomeComponent]\r\n})\r\nexport class HomeModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { SocialAuthService, FacebookLoginProvider, SocialUser, GoogleLoginProvider } from 'angularx-social-login';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ApiService } from './../../services/api/api.service';\r\nimport { AuthService } from './../../services/auth/auth.service';\r\nimport { AuthGuardService } from './../../services/auth/auth-guard.service';\r\n\r\nimport { Common } from './../../commons/common';\r\nimport { ApiStatus } from './../../commons/enum/api-status.enum';\r\nimport { CustomeResponse } from './../../commons/interfaces/custome-response';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  isLogin: boolean;\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n  loginForm: FormGroup;\r\n  signUpForm: FormGroup;\r\n  errorMsg: string;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private authService: AuthService,\r\n    private authGuardService: AuthGuardService,\r\n    private router: Router,\r\n    private authSocialService: SocialAuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authGuardService.checkAuthOut();\r\n    this.isLogin = true;\r\n    this.initLoginForm();\r\n    this.initSignUpForm();\r\n    this.loginWithSocialNetwork();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    // Unsubscribe from the subject\r\n    this.destroy$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * changeAction\r\n   * Event when change action login <-> sign up\r\n   * @memberof LoginComponent\r\n   */\r\n  public changeAction() {\r\n    this.isLogin = !this.isLogin;\r\n  }\r\n\r\n  /**\r\n   * login\r\n   * Event when loginForm submit\r\n   * @returns void\r\n   * @memberof LoginComponent\r\n   */\r\n  public login() {\r\n    // Check form validate\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // Setting data body to request API\r\n    const dataBody = {\r\n      email: this.loginForm.get(Common.KEYS.email).value,\r\n      password: this.loginForm.get(Common.KEYS.password).value\r\n    };\r\n\r\n    // Call login API\r\n    this.apiService.senPostRequest(Common.API.login, dataBody)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((data: CustomeResponse) => {\r\n        if (data.status === ApiStatus.SUCCESS) {\r\n          // Save token and redirect to Home\r\n          this.authService.setToken(data.token);\r\n          this.router.navigate([Common.PATHS.home]);\r\n        } else {\r\n          // Show error message\r\n          this.errorMsg = data.message;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * signUp\r\n   * Event when signUpForm submit\r\n   * @memberof LoginComponent\r\n   */\r\n  public signUp() {\r\n  }\r\n\r\n  /**\r\n   * signInWithFB\r\n   *\r\n   * @memberof LoginComponent\r\n   */\r\n  public signInWithFB(): void {\r\n    this.authSocialService.signIn(FacebookLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  /**\r\n   * signInWithGoogle\r\n   *\r\n   * @memberof LoginComponent\r\n   */\r\n  public signInWithGoogle(): void {\r\n    this.authSocialService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  /**\r\n   * initLoginForm\r\n   * Init loginForm FormGroup\r\n   * @private\r\n   * @memberof LoginComponent\r\n   */\r\n  private initLoginForm() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  /**\r\n   * initSignForm\r\n   * Init signUpForm FormGroup\r\n   * @private\r\n   * @memberof LoginComponent\r\n   */\r\n  private initSignUpForm() {\r\n    this.signUpForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      confirm: new FormControl('', [Validators.required, Validators.minLength(8)])\r\n    }, { validators: this.checkPasswords });\r\n  }\r\n\r\n  /**\r\n   * checkPasswords\r\n   * Validator confirm password\r\n   * @private\r\n   * @param {FormGroup} group\r\n   * @returns\r\n   * @memberof LoginComponent\r\n   */\r\n  private checkPasswords(group: FormGroup) {\r\n    const pass = group.get(Common.KEYS.password).value;\r\n    const confirmPass = group.get(Common.KEYS.confirm).value;\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n\r\n  /**\r\n   * loginWithSocialNetwork\r\n   * Call API to save user data\r\n   * @private\r\n   * @memberof LoginComponent\r\n   */\r\n  private loginWithSocialNetwork() {\r\n    this.authSocialService.authState.subscribe((user: SocialUser) => {\r\n      if (user) {\r\n        this.authService.setProfile(user);\r\n        let url: string;\r\n        if (user.provider === GoogleLoginProvider.PROVIDER_ID) {\r\n          url = Common.API.googleLogin;\r\n        } else {\r\n          url = Common.API.facebookLogin;\r\n        }\r\n        this.apiService.senPostRequest(url, {access_token: user.authToken})\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((data: CustomeResponse) => {\r\n            if (data.status === ApiStatus.SUCCESS) {\r\n              // Save token and redirect to Home\r\n              this.authService.setToken(data.token);\r\n              this.authService.isNotRefresh = true;\r\n              this.router.navigate([Common.PATHS.home]);\r\n            } else {\r\n              // Show error message\r\n              this.errorMsg = data.message;\r\n            }\r\n          });\r\n      } else {\r\n        this.authService.setProfile(null);\r\n        this.authService.removeToken();\r\n        this.router.navigate([Common.PATHS.login]);\r\n        // location.href = '/' + Common.PATHS.login;\r\n      }\r\n    });\r\n  }\r\n\r\n  public get formLoginControls() { return this.loginForm.controls; }\r\n\r\n  public get formSignUpControls() { return this.signUpForm.controls; }\r\n}\r\n","<div class=\"row main-area\">\r\n  <div class=\"login-box\">\r\n    <div class=\"col-12\">\r\n      <img class=\"logo\" src=\"../../../assets/images/logo_hz.png\" alt=\"\">\r\n    </div>\r\n\r\n    <!-- Tab -->\r\n    <div class=\"lb-header\">\r\n      <a class=\"{{ isLogin ? 'active' : '' }}\" id=\"login-box-link\" (click)=\"changeAction()\">Login</a>\r\n      <a class=\"{{ !isLogin ? 'active' : '' }}\" id=\"signup-box-link\" (click)=\"changeAction()\">Sign Up</a>\r\n    </div>\r\n\r\n    <!-- Login with social network -->\r\n    <div class=\"social-login\">\r\n      <a (click)=\"signInWithFB()\" class=\"login-facebook cursor-pointer\" title=\"Signin with Facebook\">\r\n        <i class=\"fa fa-facebook fa-lg\"></i>\r\n        Facebook\r\n      </a>\r\n      <a (click)=\"signInWithGoogle()\" class=\"login-google cursor-pointer\" title=\"Signin with Google\">\r\n        <i class=\"fa fa-google-plus fa-lg\"></i>\r\n        Google\r\n      </a>\r\n    </div>\r\n\r\n    <!-- Login form -->\r\n    <form [formGroup]=\"loginForm\" class=\"email-login\" [hidden]=\"!isLogin\" (ngSubmit)=\"login()\">\r\n      <!-- Error message -->\r\n      <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\r\n\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" id=\"login_email\" />\r\n        <div *ngIf=\"formLoginControls.email.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formLoginControls.email.errors.required\">This field is required</div>\r\n          <div *ngIf=\"formLoginControls.email.errors.email\">Invalid email address</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" id=\"login-pass\" />\r\n        <div *ngIf=\"formLoginControls.password.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formLoginControls.password.errors.required\">This field is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <button type=\"submit\" class=\"btn btn-success\">Log in</button>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <a [routerLink]=\"['/reset-password']\" class=\"forgot-password\">Forgot password?</a>\r\n      </div>\r\n    </form>\r\n\r\n    <!-- Sign Up form -->\r\n    <form [formGroup]=\"signUpForm\" class=\"email-signup\" [hidden]=\"isLogin\" (ngSubmit)=\"signUp()\">\r\n      <!-- Error message -->\r\n      <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\r\n\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        <div *ngIf=\"formSignUpControls.email.touched && formSignUpControls.email.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formSignUpControls.email.errors.required\">This field is required</div>\r\n          <div *ngIf=\"formSignUpControls.email.errors.email\">Invalid email address</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        <div *ngIf=\"formSignUpControls.password.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formSignUpControls.password.errors.required\">This field is required</div>\r\n          <div *ngIf=\"formSignUpControls.password.errors.minLength\">Password requires at least 8 alphanumeric characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"confirm\" type=\"password\" placeholder=\"Confirm Password\" />\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <button type=\"submit\" class=\"btn btn-success\">Sign Up</button>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  profile works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [ProfileComponent]\r\n})\r\nexport class ProfileModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  register works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [RegisterComponent]\r\n})\r\nexport class RegisterModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  reset-password works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [ResetPasswordComponent]\r\n})\r\nexport class ResetPasswordModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Common } from 'src/app/commons/common';\r\nimport { ApiStatus } from 'src/app/commons/enum/api-status.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'Unknown error!';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side errors\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side errors\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    if (error.status === ApiStatus.AUTH_FAIL) {\r\n      localStorage.clear();\r\n      location.href = '/' + Common.PATHS.login;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  public sendGetRequest(url: string) {\r\n    return this.httpClient.get(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public senPostRequest(url: string, requesData: any) {\r\n    return this.httpClient.post(url, requesData, { headers: this.authService.noAuthHeaders() }).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public senPostRequestAuth(url: string, requesData: any) {\r\n    return this.httpClient.post(url, requesData, { headers: this.authService.authHeaders() }).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n","// Angular modules\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\n// Services\r\nimport { AuthService } from './auth.service';\r\n\r\n// Commons\r\nimport { Common } from './../../commons/common';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate([Common.PATHS.login]);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkAuthOut(): void {\r\n    if (this.auth.isAuthenticated()) {\r\n      this.router.navigate([Common.PATHS.home]);\r\n    }\r\n  }\r\n}\r\n","// Angular modules\r\nimport { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nimport { SocialUser } from 'angularx-social-login';\r\n\r\n// Commons\r\nimport { Common } from './../../commons/common';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  private profile: SocialUser;\r\n  public isNotRefresh: boolean;\r\n  constructor(public jwtHelper: JwtHelperService) { }\r\n\r\n  public isAuthenticated(): boolean {\r\n    const token = this.getToken();\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n  public noAuthHeaders() {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    return headers;\r\n  }\r\n\r\n  public authHeaders() {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'JWT ' + this.getToken());\r\n    return headers;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    localStorage.setItem(Common.KEYS.token, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(Common.KEYS.token);\r\n  }\r\n\r\n  public removeToken() {\r\n    localStorage.removeItem(Common.KEYS.token);\r\n    localStorage.removeItem(Common.KEYS.profile);\r\n  }\r\n\r\n  public setProfile(profile: SocialUser) {\r\n    localStorage.setItem(Common.KEYS.profile, JSON.stringify(profile));\r\n    this.profile = profile;\r\n  }\r\n\r\n  public getProfile(): SocialUser {\r\n    if (!this.profile) {\r\n      this.profile = JSON.parse(localStorage.getItem(Common.KEYS.profile));\r\n    }\r\n    return this.profile;\r\n  }\r\n}\r\n","// Angular module\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\nimport decode from 'jwt-decode';\r\n\r\n// Services\r\nimport { AuthService } from './auth.service';\r\n\r\n// Commons\r\nimport { Common } from './../../commons/common';\r\n\r\n@Injectable()\r\nexport class RoleGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    // this will be passed from the route config\r\n    // on the data property\r\n    const expectedRole = route.data.expectedRole;\r\n    const token = localStorage.getItem(Common.KEYS.token);\r\n\r\n    if (!token) {\r\n      this.router.navigate([Common.PATHS.login]);\r\n      return false;\r\n    }\r\n\r\n    // decode the token to get its payload\r\n    const tokenPayload = decode(token);\r\n    if (\r\n      !this.auth.isAuthenticated() ||\r\n      tokenPayload.role !== expectedRole\r\n    ) {\r\n      this.router.navigate([Common.PATHS.login]);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}