{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/commons/common.ts","webpack:///src/app/commons/enum/api-status.enum.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/home.module.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login.module.ts","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/profile/profile.module.ts","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/register/register.module.ts","webpack:///src/app/components/reset-password/reset-password.component.ts","webpack:///src/app/components/reset-password/reset-password.component.html","webpack:///src/app/components/reset-password/reset-password.module.ts","webpack:///src/app/services/api/api.service.ts","webpack:///src/app/services/auth/auth-guard.service.ts","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/auth/role-guard.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","autoLogin","providers","PROVIDER_ID","provider","forRoot","declarations","imports","bootstrap","ROUTES","path","PATHS","login","component","register","home","canActivate","profile","resetPassword","redirectTo","Common","KEYS","token","email","password","confirm","API","signup","userList","facebookLogin","googleLogin","logout","ApiStatus","HomeComponent","apiService","router","authService","authSocialService","destroy$","user","getProfile","next","unsubscribe","senPostRequestAuth","pipe","subscribe","data","status","SUCCESS","isNotRefresh","signOut","removeToken","navigate","console","error","HomeModule","LoginComponent","authGuardService","checkAuthOut","isLogin","initLoginForm","initSignUpForm","loginWithSocialNetwork","loginForm","invalid","dataBody","get","value","senPostRequest","setToken","errorMsg","message","signIn","required","signUpForm","minLength","validators","checkPasswords","group","pass","confirmPass","notSame","authState","setProfile","url","access_token","authToken","controls","changeAction","signInWithFB","signInWithGoogle","signUp","LoginModule","ProfileComponent","ProfileModule","RegisterComponent","RegisterModule","ResetPasswordComponent","ResetPasswordModule","ApiService","httpClient","errorMessage","ErrorEvent","window","alert","AUTH_FAIL","localStorage","clear","location","href","handleError","requesData","post","headers","noAuthHeaders","authHeaders","providedIn","AuthGuardService","auth","isAuthenticated","AuthService","jwtHelper","getToken","isTokenExpired","append","setItem","getItem","removeItem","JSON","stringify","parse","RoleGuardService","route","expectedRole","tokenPayload","role","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqEaC,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBA1BT,CACT,kFADS,EAET,uEAFS,EAGT,kFAHS,EAIT;AAAEC,eAAO,EAAE,8DAAX;AAAwBC,gBAAQ,EAAE;AAAlC,OAJS,EAKT,mEALS,EAMT,oEANS,EAOT;AACED,eAAO,EAAE,yBADX;AAEEC,gBAAQ,EAAE;AACRC,mBAAS,EAAE,KADH;AAERC,mBAAS,EAAE,CACT;AACEV,cAAE,EAAE,6EAAsBW,WAD5B;AAEEC,oBAAQ,EAAE,IAAI,4EAAJ,CAA0B,kBAA1B;AAFZ,WADS,EAKT;AACEZ,cAAE,EAAE,2EAAoBW,WAD1B;AAEEC,oBAAQ,EAAE,IAAI,0EAAJ,CAAwB,0EAAxB;AAFZ,WALS;AAFH;AAFZ,OAPS,C;AAuBV,gBAnCQ,CACP,uEADO,EAEP,6DAAaC,OAAb,CAAqB,mDAArB,CAFO,EAGP,wEAHO,EAIP,2EAJO,EAKP,oFALO,EAMP,iFANO,EAOP,qGAPO,EAQP,kFARO,EASP,qEATO,EAUP,wEAVO,CAmCR;;;;0HAGUP,S,EAAS;AAAA,uBAxClB,4DAwCkB;AAxCN,kBAGZ,uEAHY,EAGC,4DAHD,EAKZ,wEALY,EAMZ,2EANY,EAOZ,oFAPY,EAQZ,iFARY,EASZ,qGATY,EAUZ,kFAVY,EAWZ,qEAXY,EAYZ,wEAZY;AAwCM,O;AA5BD,K;;;;;sEA4BRA,S,EAAS;cA1CrB,sDA0CqB;eA1CZ;AACRQ,sBAAY,EAAE,CACZ,4DADY,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,6DAAaF,OAAb,CAAqB,mDAArB,CAFO,EAGP,wEAHO,EAIP,2EAJO,EAKP,oFALO,EAMP,iFANO,EAOP,qGAPO,EAQP,kFARO,EASP,qEATO,EAUP,wEAVO,CAJD;AAgBRH,mBAAS,EAAE,CACT,kFADS,EAET,uEAFS,EAGT,kFAHS,EAIT;AAAEH,mBAAO,EAAE,8DAAX;AAAwBC,oBAAQ,EAAE;AAAlC,WAJS,EAKT,mEALS,EAMT,oEANS,EAOT;AACED,mBAAO,EAAE,yBADX;AAEEC,oBAAQ,EAAE;AACRC,uBAAS,EAAE,KADH;AAERC,uBAAS,EAAE,CACT;AACEV,kBAAE,EAAE,6EAAsBW,WAD5B;AAEEC,wBAAQ,EAAE,IAAI,4EAAJ,CAA0B,kBAA1B;AAFZ,eADS,EAKT;AACEZ,kBAAE,EAAE,2EAAoBW,WAD1B;AAEEC,wBAAQ,EAAE,IAAI,0EAAJ,CAAwB,0EAAxB;AAFZ,eALS;AAFH;AAFZ,WAPS,CAhBH;AAwCRI,mBAAS,EAAE,CAAC,4DAAD;AAxCH,S;AA0CY,Q;;;;;;;;;;;;;;;;;;AClEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,mC,CAAA;AAIA;AAOA;;;AAIO,QAAMC,MAAM,GAAW,CAC5B;AACEC,UAAI,EAAE,uDAAOC,KAAP,CAAaC,KADrB;AAEEC,eAAS,EAAE;AAFb,KAD4B,EAK5B;AACEH,UAAI,EAAE,uDAAOC,KAAP,CAAaG,QADrB;AAEED,eAAS,EAAE;AAFb,KAL4B,EAS5B;AACEH,UAAI,EAAE,uDAAOC,KAAP,CAAaI,IADrB;AAEEF,eAAS,EAAE,6EAFb;AAGEG,iBAAW,EAAE,CAAC,kFAAD;AAHf,KAT4B,EAc5B;AACEN,UAAI,EAAE,uDAAOC,KAAP,CAAaM,OADrB;AAEEJ,eAAS,EAAE,sFAFb;AAGEG,iBAAW,EAAE,CAAC,kFAAD;AAHf,KAd4B,EAmB5B;AACEN,UAAI,EAAE,uDAAOC,KAAP,CAAaO,aADrB;AAEEL,eAAS,EAAE;AAFb,KAnB4B,EAuB5B;AACEH,UAAI,EAAE,IADR;AAEES,gBAAU,EAAE,uDAAOR,KAAP,CAAaI;AAF3B,KAvB4B,CAAvB;;;;;;;;;;;;;;;;AClBP;AAAA;;;AAAA;AAAA;AAAA;;QAAaK,M;;;;AACG,WAAAT,KAAA,GAAQ;AACpBI,UAAI,EAAE,EADc;AAEpBE,aAAO,EAAE,SAFW;AAGpBL,WAAK,EAAE,OAHa;AAIpBE,cAAQ,EAAE,UAJU;AAKpBI,mBAAa,EAAE;AALK,KAAR;AAQA,WAAAG,IAAA,GAAO;AACnBC,WAAK,EAAE,OADY;AAEnBC,WAAK,EAAE,OAFY;AAGnBC,cAAQ,EAAE,UAHS;AAInBC,aAAO,EAAE,SAJU;AAKnBR,aAAO,EAAE;AALU,KAAP;AAQA,WAAAS,GAAA,GAAM;AAClBd,WAAK,EAAE,YADW;AAElBe,YAAM,EAAE,aAFU;AAGlBC,cAAQ,EAAE,WAHQ;AAIlBC,mBAAa,EAAE,6BAJG;AAKlBC,iBAAW,EAAE,2BALK;AAMlBC,YAAM,EAAE;AANU,KAAN;;;;;;;;;;;;;;;;ACjBhB;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYC,SAAZ;;AAAA,eAAYA,SAAZ,EAAqB;AACnB;AACA;AACA;AACD,KAJD,EAAYA,SAAS,KAATA,SAAS,MAArB;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBaC,a;AAKX,6BACUC,UADV,EAEUC,MAFV,EAGUC,WAHV,EAIUC,iBAJV,EAI8C;AAAA;;AAHpC,aAAAH,UAAA,GAAAA,UAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AANV,aAAAC,QAAA,GAA6B,IAAI,4CAAJ,EAA7B;AAOK;;;;mCAEM;AACT,eAAKC,IAAL,GAAY,KAAKH,WAAL,CAAiBI,UAAjB,EAAZ;AACD;;;sCAEa;AACZ,eAAKF,QAAL,CAAcG,IAAd,CAAmB,IAAnB,EADY,CAEZ;;AACA,eAAKH,QAAL,CAAcI,WAAd;AACD;AAED;;;;;;;;iCAKgB;AAAA;;AACd;AACA,eAAKR,UAAL,CAAgBS,kBAAhB,CAAmC,uDAAOjB,GAAP,CAAWK,MAA9C,EAAsD,EAAtD,EACGa,IADH,CACQ,iEAAU,KAAKN,QAAf,CADR,EAEGO,SAFH,CAEa,UAACC,IAAD,EAAe;AACxB,gBAAIA,IAAI,CAACC,MAAL,KAAgB,wEAAUC,OAA9B,EAAuC;AACrC,kBAAI,KAAI,CAACZ,WAAL,CAAiBa,YAArB,EAAmC;AACjC,qBAAI,CAACZ,iBAAL,CAAuBa,OAAvB;AACD,eAFD,MAEO;AACL,qBAAI,CAACd,WAAL,CAAiBe,WAAjB;;AACA,qBAAI,CAAChB,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaC,KAAd,CAArB;AACD;AACF,aAPD,MAOO;AACLyC,qBAAO,CAACC,KAAR,CAAcR,IAAI,CAACC,MAAnB;AACD;AACF,WAbH;AAcD;;;;;;;uBA3CUd,a,EAAa,qI,EAAA,uH,EAAA,+I,EAAA,wI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,onC;AAAA;AAAA;ACjB1B;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAwC;;AAAO;;AAAsB;;AAAS;;AAAO;;AACvF;;AACA;;AACE;;AAAwC;;AAAO;;AACjD;;AACA;;AACE;;AAAwC;;AAAS;;AACnD;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAuD;;AAAyB;;AAChF;;AACE;;AACF;;AACF;;AACA;;AACE;;AAA+E;;AAAO;;AACtF;;AAAkF;;AAAQ;;AAC1F;;AACA;;AAAqD;AAAA,mBAAS,IAAAF,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AAChF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAfmE;;AAAA;;AAEhD;;AAAA;;;;;;;;sEDdNE,a,EAAa;cALzB,uDAKyB;eALf;AACTtC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa0D,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBALZ,CACP,4DADO,CAKY;;;;0HAAVA,U,EAAU;AAAA,uBAFN,6DAEM;AAFO,kBAF1B,4DAE0B;AAEP,O;AAJP,K;;;;;sEAIHA,U,EAAU;cANtB,sDAMsB;eANb;AACRhD,iBAAO,EAAE,CACP,4DADO,CADD;AAIRD,sBAAY,EAAE,CAAC,6DAAD;AAJN,S;AAMa,Q;;;;;;;;;;;;;;;;;;ACVvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2BM;;AAA8D;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAK1D;;AAAqD;;AAAsB;;;;;;AAC3E;;AAAkD;;AAAqB;;;;;;AAFzE;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAML;;AAAwD;;AAAsB;;;;;;AADhF;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAcT;;AAA8D;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAK1D;;AAAsD;;AAAsB;;;;;;AAC5E;;AAAmD;;AAAqB;;;;;;AAF1E;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAML;;AAAyD;;AAAsB;;;;;;AAC/E;;AAA0D;;AAC1D;;;;;;AAHF;;AACE;;AACA;;AAEF;;;;;;AAHO;;AAAA;;AACA;;AAAA;;;;;;;;QD5CFkD,c;AAQX,8BACUtB,UADV,EAEUE,WAFV,EAGUqB,gBAHV,EAIUtB,MAJV,EAKUE,iBALV,EAK8C;AAAA;;AAJpC,aAAAH,UAAA,GAAAA,UAAA;AACA,aAAAE,WAAA,GAAAA,WAAA;AACA,aAAAqB,gBAAA,GAAAA,gBAAA;AACA,aAAAtB,MAAA,GAAAA,MAAA;AACA,aAAAE,iBAAA,GAAAA,iBAAA;AAVV,aAAAC,QAAA,GAA6B,IAAI,4CAAJ,EAA7B;AAWK;;;;mCAEM;AACT,eAAKmB,gBAAL,CAAsBC,YAAtB;AACA,eAAKC,OAAL,GAAe,IAAf;AACA,eAAKC,aAAL;AACA,eAAKC,cAAL;AACA,eAAKC,sBAAL;AACD;;;sCAEa;AACZ,eAAKxB,QAAL,CAAcG,IAAd,CAAmB,IAAnB,EADY,CAEZ;;AACA,eAAKH,QAAL,CAAcI,WAAd;AACD;AAED;;;;;;;;uCAKsB;AACpB,eAAKiB,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;AAED;;;;;;;;;gCAMe;AAAA;;AACb;AACA,cAAI,KAAKI,SAAL,CAAeC,OAAnB,EAA4B;AAC1B;AACD,WAJY,CAMb;;;AACA,cAAMC,QAAQ,GAAG;AACf1C,iBAAK,EAAE,KAAKwC,SAAL,CAAeG,GAAf,CAAmB,uDAAO7C,IAAP,CAAYE,KAA/B,EAAsC4C,KAD9B;AAEf3C,oBAAQ,EAAE,KAAKuC,SAAL,CAAeG,GAAf,CAAmB,uDAAO7C,IAAP,CAAYG,QAA/B,EAAyC2C;AAFpC,WAAjB,CAPa,CAYb;;AACA,eAAKjC,UAAL,CAAgBkC,cAAhB,CAA+B,uDAAO1C,GAAP,CAAWd,KAA1C,EAAiDqD,QAAjD,EACGrB,IADH,CACQ,iEAAU,KAAKN,QAAf,CADR,EAEGO,SAFH,CAEa,UAACC,IAAD,EAA2B;AACpC,gBAAIA,IAAI,CAACC,MAAL,KAAgB,wEAAUC,OAA9B,EAAuC;AACrC;AACA,oBAAI,CAACZ,WAAL,CAAiBiC,QAAjB,CAA0BvB,IAAI,CAACxB,KAA/B;;AACA,oBAAI,CAACa,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaI,IAAd,CAArB;AACD,aAJD,MAIO;AACL;AACA,oBAAI,CAACuD,QAAL,GAAgBxB,IAAI,CAACyB,OAArB;AACD;AACF,WAXH;AAYD;AAED;;;;;;;;iCAKgB,CACf;AAED;;;;;;;;uCAKmB;AACjB,eAAKlC,iBAAL,CAAuBmC,MAAvB,CAA8B,4EAAsBrE,WAApD;AACD;AAED;;;;;;;;2CAKuB;AACrB,eAAKkC,iBAAL,CAAuBmC,MAAvB,CAA8B,0EAAoBrE,WAAlD;AACD;AAED;;;;;;;;;wCAMwB;AACtB,eAAK4D,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7BxC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWkD,QAAZ,EAAsB,0DAAWlD,KAAjC,CAApB,CADsB;AAE7BC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWiD,QAAZ,CAApB;AAFmB,WAAd,CAAjB;AAID;AAED;;;;;;;;;yCAMyB;AACvB,eAAKC,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BnD,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWkD,QAAZ,EAAsB,0DAAWlD,KAAjC,CAApB,CADuB;AAE9BC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWiD,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAApB,CAFoB;AAG9BlD,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWgD,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAApB;AAHqB,WAAd,EAIf;AAAEC,sBAAU,EAAE,KAAKC;AAAnB,WAJe,CAAlB;AAKD;AAED;;;;;;;;;;;uCAQuBC,K,EAAkB;AACvC,cAAMC,IAAI,GAAGD,KAAK,CAACZ,GAAN,CAAU,uDAAO7C,IAAP,CAAYG,QAAtB,EAAgC2C,KAA7C;AACA,cAAMa,WAAW,GAAGF,KAAK,CAACZ,GAAN,CAAU,uDAAO7C,IAAP,CAAYI,OAAtB,EAA+B0C,KAAnD;AACA,iBAAOY,IAAI,KAAKC,WAAT,GAAuB,IAAvB,GAA8B;AAAEC,mBAAO,EAAE;AAAX,WAArC;AACD;AAED;;;;;;;;;iDAMiC;AAAA;;AAC/B,eAAK5C,iBAAL,CAAuB6C,SAAvB,CAAiCrC,SAAjC,CAA2C,UAACN,IAAD,EAAsB;AAC/D,gBAAIA,IAAJ,EAAU;AACR,oBAAI,CAACH,WAAL,CAAiB+C,UAAjB,CAA4B5C,IAA5B;;AACA,kBAAI6C,GAAJ;;AACA,kBAAI7C,IAAI,CAACnC,QAAL,KAAkB,0EAAoBD,WAA1C,EAAuD;AACrDiF,mBAAG,GAAG,uDAAO1D,GAAP,CAAWI,WAAjB;AACD,eAFD,MAEO;AACLsD,mBAAG,GAAG,uDAAO1D,GAAP,CAAWG,aAAjB;AACD;;AACD,oBAAI,CAACK,UAAL,CAAgBkC,cAAhB,CAA+BgB,GAA/B,EAAoC;AAACC,4BAAY,EAAE9C,IAAI,CAAC+C;AAApB,eAApC,EACG1C,IADH,CACQ,iEAAU,MAAI,CAACN,QAAf,CADR,EAEGO,SAFH,CAEa,UAACC,IAAD,EAA2B;AACpC,oBAAIA,IAAI,CAACC,MAAL,KAAgB,wEAAUC,OAA9B,EAAuC;AACrC;AACA,wBAAI,CAACZ,WAAL,CAAiBiC,QAAjB,CAA0BvB,IAAI,CAACxB,KAA/B;;AACA,wBAAI,CAACc,WAAL,CAAiBa,YAAjB,GAAgC,IAAhC;;AACA,wBAAI,CAACd,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaI,IAAd,CAArB;AACD,iBALD,MAKO;AACL;AACA,wBAAI,CAACuD,QAAL,GAAgBxB,IAAI,CAACyB,OAArB;AACD;AACF,eAZH;AAaD,aArBD,MAqBO;AACL,oBAAI,CAACnC,WAAL,CAAiB+C,UAAjB,CAA4B,IAA5B;;AACA,oBAAI,CAAC/C,WAAL,CAAiBe,WAAjB;;AACA,oBAAI,CAAChB,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaC,KAAd,CAArB,EAHK,CAIL;;AACD;AACF,WA5BD;AA6BD;;;4BAE8B;AAAE,iBAAO,KAAKmD,SAAL,CAAewB,QAAtB;AAAiC;;;4BAElC;AAAE,iBAAO,KAAKb,UAAL,CAAgBa,QAAvB;AAAkC;;;;;;;uBAnLzD/B,c,EAAc,qI,EAAA,wI,EAAA,mJ,EAAA,wH,EAAA,wI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,c;AAAA,gzC;AAAA;AAAA;ACtB3B;;AACE;;AACE;;AACE;;AACF;;AAGA;;AACE;;AAA6D;AAAA,mBAAS,IAAAgC,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAK;;AAC3F;;AAA+D;AAAA,mBAAS,IAAAA,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAO;;AACjG;;AAGA;;AACE;;AAAG;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AACD;;AACA;;AACF;;AACA;;AAAG;AAAA,mBAAS,IAAAC,gBAAA,EAAT;AAA2B,WAA3B;;AACD;;AACA;;AACF;;AACF;;AAGA;;AAAsE;AAAA,mBAAY,IAAA9E,KAAA,EAAZ;AAAmB,WAAnB;;AAEpE;;AAEA;;AACE;;AACA;;AAIF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AAA8C;;AAAM;;AACtD;;AACA;;AACE;;AAA8D;;AAAgB;;AAChF;;AACF;;AAGA;;AAAuE;AAAA,mBAAY,IAAA+E,MAAA,EAAZ;AAAoB,WAApB;;AAErE;;AAEA;;AACE;;AACA;;AAIF;;AACA;;AACE;;AACA;;AAKF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAA8C;;AAAO;;AACvD;;AACF;;AAEF;;AACF;;;;AAvES;;AAAA;;AACA;;AAAA;;AAgBC;;AAAA,+FAAuB,QAAvB,EAAuB,YAAvB;;AAEC;;AAAA;;AAIE;;AAAA;;AAOA;;AAAA;;AAQF;;AAAA;;AAKD;;AAAA,gGAAwB,QAAxB,EAAwB,WAAxB;;AAEC;;AAAA;;AAIE;;AAAA;;AAOA;;AAAA;;;;;;;;;sED1CAnC,c,EAAc;cAL1B,uDAK0B;eALhB;AACT7D,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAea+F,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBARb,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,4DAJO,CAQa;;;;0HAAXA,W,EAAW;AAAA,uBAFP,+DAEO;AAFO,kBAL3B,4DAK2B,EAJ3B,0DAI2B,EAH3B,kEAG2B,EAF3B,4DAE2B;AAEP,O;AAJR,K;;;;;sEAIHA,W,EAAW;cATvB,sDASuB;eATd;AACRrF,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,4DAJO,CADD;AAORD,sBAAY,EAAE,CAAC,+DAAD;AAPN,S;AASc,Q;;;;;;;;;;;;;;;;;;ACfxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauF,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA;AAAA;ACP7B;;AACE;;AACF;;;;;;;;sEDKaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTlG,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaiG,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,gBALf,CACP,4DADO,CAKe;;;;0HAAbA,a,EAAa;AAAA,uBAFT,mEAES;AAFO,kBAF7B,4DAE6B;AAEP,O;AAJV,K;;;;;sEAIHA,a,EAAa;cANzB,sDAMyB;eANhB;AACRvF,iBAAO,EAAE,CACP,4DADO,CADD;AAIRD,sBAAY,EAAE,CAAC,mEAAD;AAJN,S;AAMgB,Q;;;;;;;;;;;;;;;;;;ACV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayF,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AACE;;AACF;;;;;;;;sEDKaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTpG,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUamG,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBALhB,CACP,4DADO,CAKgB;;;;0HAAdA,c,EAAc;AAAA,uBAFV,qEAEU;AAFO,kBAF9B,4DAE8B;AAEP,O;AAJX,K;;;;;sEAIHA,c,EAAc;cAN1B,sDAM0B;eANjB;AACRzF,iBAAO,EAAE,CACP,4DADO,CADD;AAIRD,sBAAY,EAAE,CAAC,qEAAD;AAJN,S;AAMiB,Q;;;;;;;;;;;;;;;;;;ACV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa2F,sB;AAEX,wCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACPnC;;AACE;;AACF;;;;;;;;sEDKaA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTtG,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaqG,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBALrB,CACP,4DADO,CAKqB;;;;0HAAnBA,mB,EAAmB;AAAA,uBAFf,gFAEe;AAFO,kBAFnC,4DAEmC;AAEP,O;AAJhB,K;;;;;sEAIHA,mB,EAAmB;cAN/B,sDAM+B;eANtB;AACR3F,iBAAO,EAAE,CACP,4DADO,CADD;AAIRD,sBAAY,EAAE,CAAC,gFAAD;AAJN,S;AAMsB,Q;;;;;;;;;;;;;;;;;;ACVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaa6F,U;AAEX,0BACUC,UADV,EAEUhE,WAFV,EAEkC;AAAA;;AADxB,aAAAgE,UAAA,GAAAA,UAAA;AACA,aAAAhE,WAAA,GAAAA,WAAA;AACL;;;;oCAEOkB,K,EAA0B;AACpC,cAAI+C,YAAY,GAAG,gBAAnB;;AACA,cAAI/C,KAAK,CAACA,KAAN,YAAuBgD,UAA3B,EAAuC;AACrC;AACAD,wBAAY,oBAAa/C,KAAK,CAACA,KAAN,CAAYiB,OAAzB,CAAZ;AACD,WAHD,MAGO;AACL;AACA8B,wBAAY,yBAAkB/C,KAAK,CAACP,MAAxB,wBAA4CO,KAAK,CAACiB,OAAlD,CAAZ;AACD;;AACDgC,gBAAM,CAACC,KAAP,CAAaH,YAAb;;AACA,cAAI/C,KAAK,CAACP,MAAN,KAAiB,+EAAU0D,SAA/B,EAA0C;AACxCC,wBAAY,CAACC,KAAb;AACAC,oBAAQ,CAACC,IAAT,GAAgB,MAAM,8DAAOlG,KAAP,CAAaC,KAAnC;AACD;;AACD,iBAAO,wDAAWyF,YAAX,CAAP;AACD;;;uCAEqBjB,G,EAAa;AACjC,iBAAO,KAAKgB,UAAL,CAAgBlC,GAAhB,CAAoBkB,GAApB,EAAyBxC,IAAzB,CAA8B,kEAAW,KAAKkE,WAAhB,CAA9B,CAAP;AACD;;;uCAEqB1B,G,EAAa2B,U,EAAiB;AAClD,iBAAO,KAAKX,UAAL,CAAgBY,IAAhB,CAAqB5B,GAArB,EAA0B2B,UAA1B,EAAsC;AAAEE,mBAAO,EAAE,KAAK7E,WAAL,CAAiB8E,aAAjB;AAAX,WAAtC,EAAqFtE,IAArF,CAA0F,kEAAW,KAAKkE,WAAhB,CAA1F,CAAP;AACD;;;2CAEyB1B,G,EAAa2B,U,EAAiB;AACtD,iBAAO,KAAKX,UAAL,CAAgBY,IAAhB,CAAqB5B,GAArB,EAA0B2B,UAA1B,EAAsC;AAAEE,mBAAO,EAAE,KAAK7E,WAAL,CAAiB+E,WAAjB;AAAX,WAAtC,EAAmFvE,IAAnF,CAAwF,kEAAW,KAAKkE,WAAhB,CAAxF,CAAP;AACD;;;;;;;uBAlCUX,U,EAAU,uH,EAAA,sH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACViB,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;;;ACbvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;AAOA;;;QAIaC,gB;AACX,gCAAmBC,IAAnB,EAA6CnF,MAA7C,EAA6D;AAAA;;AAA1C,aAAAmF,IAAA,GAAAA,IAAA;AAA0B,aAAAnF,MAAA,GAAAA,MAAA;AAAmB;;;;sCACrD;AACT,cAAI,CAAC,KAAKmF,IAAL,CAAUC,eAAV,EAAL,EAAkC;AAChC,iBAAKpF,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaC,KAAd,CAArB;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;uCAEW;AACV,cAAI,KAAK0G,IAAL,CAAUC,eAAV,EAAJ,EAAiC;AAC/B,iBAAKpF,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaI,IAAd,CAArB;AACD;AACF;;;;;;;uBAdUsG,gB,EAAgB,iH,EAAA,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oF,CAAA;AAOA;;;QAIaG,W;AAIX,2BAAmBC,SAAnB,EAAgD;AAAA;;AAA7B,aAAAA,SAAA,GAAAA,SAAA;AAAgC;;;;0CAE7B;AACpB,cAAMnG,KAAK,GAAG,KAAKoG,QAAL,EAAd;AACA,iBAAO,CAAC,KAAKD,SAAL,CAAeE,cAAf,CAA8BrG,KAA9B,CAAR;AACD;;;wCAEsB;AACrB,cAAI2F,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACW,MAAR,CAAe,cAAf,EAA+B,kBAA/B,CAAV;AACA,iBAAOX,OAAP;AACD;;;sCAEoB;AACnB,cAAIA,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACW,MAAR,CAAe,cAAf,EAA+B,kBAA/B,CAAV;AACAX,iBAAO,GAAGA,OAAO,CAACW,MAAR,CAAe,eAAf,EAAgC,SAAS,KAAKF,QAAL,EAAzC,CAAV;AACA,iBAAOT,OAAP;AACD;;;iCAEe3F,K,EAAe;AAC7BoF,sBAAY,CAACmB,OAAb,CAAqB,uDAAOxG,IAAP,CAAYC,KAAjC,EAAwCA,KAAxC;AACD;;;mCAEc;AACb,iBAAOoF,YAAY,CAACoB,OAAb,CAAqB,uDAAOzG,IAAP,CAAYC,KAAjC,CAAP;AACD;;;sCAEoB;AACnBoF,sBAAY,CAACqB,UAAb,CAAwB,uDAAO1G,IAAP,CAAYC,KAApC;AACAoF,sBAAY,CAACqB,UAAb,CAAwB,uDAAO1G,IAAP,CAAYJ,OAApC;AACD;;;mCAEiBA,O,EAAqB;AACrCyF,sBAAY,CAACmB,OAAb,CAAqB,uDAAOxG,IAAP,CAAYJ,OAAjC,EAA0C+G,IAAI,CAACC,SAAL,CAAehH,OAAf,CAA1C;AACA,eAAKA,OAAL,GAAeA,OAAf;AACD;;;qCAEgB;AACf,cAAI,CAAC,KAAKA,OAAV,EAAmB;AACjB,iBAAKA,OAAL,GAAe+G,IAAI,CAACE,KAAL,CAAWxB,YAAY,CAACoB,OAAb,CAAqB,uDAAOzG,IAAP,CAAYJ,OAAjC,CAAX,CAAf;AACD;;AACD,iBAAO,KAAKA,OAAZ;AACD;;;;;;;uBA/CUuG,W,EAAW,2H;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;AAQA;;;QAIaW,gB;AACX,gCAAmBb,IAAnB,EAA6CnF,MAA7C,EAA6D;AAAA;;AAA1C,aAAAmF,IAAA,GAAAA,IAAA;AAA0B,aAAAnF,MAAA,GAAAA,MAAA;AAAmB;;;;oCAEpDiG,K,EAA6B;AACvC;AACA;AACA,cAAMC,YAAY,GAAGD,KAAK,CAACtF,IAAN,CAAWuF,YAAhC;AACA,cAAM/G,KAAK,GAAGoF,YAAY,CAACoB,OAAb,CAAqB,uDAAOzG,IAAP,CAAYC,KAAjC,CAAd;;AAEA,cAAI,CAACA,KAAL,EAAY;AACV,iBAAKa,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaC,KAAd,CAArB;AACA,mBAAO,KAAP;AACD,WATsC,CAWvC;;;AACA,cAAM0H,YAAY,GAAG,kDAAOhH,KAAP,CAArB;;AACA,cACE,CAAC,KAAKgG,IAAL,CAAUC,eAAV,EAAD,IACAe,YAAY,CAACC,IAAb,KAAsBF,YAFxB,EAGE;AACA,iBAAKlG,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,uDAAOzC,KAAP,CAAaC,KAAd,CAArB;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBAxBUuH,gB,EAAgB,iH,EAAA,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMK,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAItF,OAAO,CAACC,KAAR,CAAcqF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'chatwork';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { AuthGuardService } from './services/auth/auth-guard.service';\r\nimport { RoleGuardService } from './services/auth/role-guard.service';\r\nimport { ApiService } from './services/api/api.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ROUTES } from './app.routes';\r\n\r\nimport { HomeModule } from './components/home/home.module';\r\nimport { ProfileModule } from './components/profile/profile.module';\r\nimport { RegisterModule } from './components/register/register.module';\r\nimport { LoginModule } from './components/login/login.module';\r\nimport { ResetPasswordModule } from './components/reset-password/reset-password.module';\r\n\r\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\nimport {\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider,\r\n} from 'angularx-social-login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(ROUTES),\r\n    HomeModule,\r\n    LoginModule,\r\n    RegisterModule,\r\n    ProfileModule,\r\n    ResetPasswordModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule,\r\n    SocialLoginModule,\r\n  ],\r\n  providers: [\r\n    AuthGuardService,\r\n    AuthService,\r\n    RoleGuardService,\r\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n    JwtHelperService,\r\n    ApiService,\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider('2965647346823367'),\r\n          },\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider('159957289052-k9qaa2dp92avv931ae5vuo9va7upfelp.apps.googleusercontent.com'),\r\n          },\r\n        ],\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// Angular module\r\nimport { Routes } from '@angular/router';\r\n\r\n// Services\r\nimport { AuthGuardService as AuthGuard } from './services/auth/auth-guard.service';\r\nimport { RoleGuardService as RoleGuard } from './services/auth/role-guard.service';\r\n\r\n// Components\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\n\r\n// Commons\r\nimport { Common } from './commons/common';\r\n\r\n\r\nexport const ROUTES: Routes = [\r\n  {\r\n    path: Common.PATHS.login,\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: Common.PATHS.register,\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: Common.PATHS.home,\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: Common.PATHS.profile,\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: Common.PATHS.resetPassword,\r\n    component: ResetPasswordComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: Common.PATHS.home\r\n  }\r\n];\r\n","export class Common {\r\n  public static PATHS = {\r\n    home: '',\r\n    profile: 'profile',\r\n    login: 'login',\r\n    register: 'register',\r\n    resetPassword: 'reset-password'\r\n  };\r\n\r\n  public static KEYS = {\r\n    token: 'token',\r\n    email: 'email',\r\n    password: 'password',\r\n    confirm: 'confirm',\r\n    profile: 'profile',\r\n  };\r\n\r\n  public static API = {\r\n    login: '/api/login',\r\n    signup: '/api/signup',\r\n    userList: '/api/user',\r\n    facebookLogin: '/api/social-signin/facebook',\r\n    googleLogin: '/api/social-signin/google',\r\n    logout: '/api/logout',\r\n  };\r\n}\r\n","export enum ApiStatus {\r\n  SUCCESS = 200,\r\n  ERROR = 500,\r\n  AUTH_FAIL = 401\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SocialAuthService, SocialUser, GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\r\n\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { Common } from '../../commons/common';\r\nimport { ApiStatus } from '../../commons/enum/api-status.enum';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  user: SocialUser;\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private authSocialService: SocialAuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.authService.getProfile();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    // Unsubscribe from the subject\r\n    this.destroy$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Logout\r\n   *\r\n   * @memberof HomeComponent\r\n   */\r\n  public logout() {\r\n    // Call login API\r\n    this.apiService.senPostRequestAuth(Common.API.logout, {})\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((data: any) => {\r\n        if (data.status === ApiStatus.SUCCESS) {\r\n          if (this.authService.isNotRefresh) {\r\n            this.authSocialService.signOut();\r\n          } else {\r\n            this.authService.removeToken();\r\n            this.router.navigate([Common.PATHS.login]);\r\n          }\r\n        } else {\r\n          console.error(data.status);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<header class=\"main-header\">\r\n  <nav class=\"navbar navbar-expand-lg navbar-light w-100\">\r\n    <div id=\"logo\">\r\n      <a href=\"#\">\r\n        <img src=\"../../../assets/images/logo_hz.png\" alt=\"logo\">\r\n      </a>\r\n    </div>\r\n\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mx-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link text-white\" href=\"#\">Profile<span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link text-white\" href=\"#\">Friends</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link text-white\" href=\"#\">Favorites</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"header-right\">\r\n        <div class=\"dropdown ml-auto\">\r\n          <a href=\"#\" data-toggle=\"dropdown\">\r\n            <span class=\"mr-2 d-none d-sm-inline-block text-white\">{{user ? user.name : ''}}</span>\r\n            <figure class=\"avatar\">\r\n              <img [src]=\"user ? user.photoUrl : '../../../assets/images/avatar3.png'\" class=\"rounded-circle\" alt=\"image\">\r\n            </figure>\r\n          </a>\r\n          <div class=\"dropdown-menu dropdown-menu-right\">\r\n            <a href=\"#\" class=\"dropdown-item\" data-navigation-target=\"contact-information\">Profile</a>\r\n            <a href=\"#\" class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#settingModal\">Settings</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item cursor-pointer text-primary\" (click)=\"logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from './home.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [HomeComponent]\r\n})\r\nexport class HomeModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { SocialAuthService, FacebookLoginProvider, SocialUser, GoogleLoginProvider } from 'angularx-social-login';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ApiService } from './../../services/api/api.service';\r\nimport { AuthService } from './../../services/auth/auth.service';\r\nimport { AuthGuardService } from './../../services/auth/auth-guard.service';\r\n\r\nimport { Common } from './../../commons/common';\r\nimport { ApiStatus } from './../../commons/enum/api-status.enum';\r\nimport { CustomeResponse } from './../../commons/interfaces/custome-response';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  isLogin: boolean;\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n  loginForm: FormGroup;\r\n  signUpForm: FormGroup;\r\n  errorMsg: string;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private authService: AuthService,\r\n    private authGuardService: AuthGuardService,\r\n    private router: Router,\r\n    private authSocialService: SocialAuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authGuardService.checkAuthOut();\r\n    this.isLogin = true;\r\n    this.initLoginForm();\r\n    this.initSignUpForm();\r\n    this.loginWithSocialNetwork();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    // Unsubscribe from the subject\r\n    this.destroy$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * changeAction\r\n   * Event when change action login <-> sign up\r\n   * @memberof LoginComponent\r\n   */\r\n  public changeAction() {\r\n    this.isLogin = !this.isLogin;\r\n  }\r\n\r\n  /**\r\n   * login\r\n   * Event when loginForm submit\r\n   * @returns void\r\n   * @memberof LoginComponent\r\n   */\r\n  public login() {\r\n    // Check form validate\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // Setting data body to request API\r\n    const dataBody = {\r\n      email: this.loginForm.get(Common.KEYS.email).value,\r\n      password: this.loginForm.get(Common.KEYS.password).value\r\n    };\r\n\r\n    // Call login API\r\n    this.apiService.senPostRequest(Common.API.login, dataBody)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((data: CustomeResponse) => {\r\n        if (data.status === ApiStatus.SUCCESS) {\r\n          // Save token and redirect to Home\r\n          this.authService.setToken(data.token);\r\n          this.router.navigate([Common.PATHS.home]);\r\n        } else {\r\n          // Show error message\r\n          this.errorMsg = data.message;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * signUp\r\n   * Event when signUpForm submit\r\n   * @memberof LoginComponent\r\n   */\r\n  public signUp() {\r\n  }\r\n\r\n  /**\r\n   * signInWithFB\r\n   *\r\n   * @memberof LoginComponent\r\n   */\r\n  public signInWithFB(): void {\r\n    this.authSocialService.signIn(FacebookLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  /**\r\n   * signInWithGoogle\r\n   *\r\n   * @memberof LoginComponent\r\n   */\r\n  public signInWithGoogle(): void {\r\n    this.authSocialService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  /**\r\n   * initLoginForm\r\n   * Init loginForm FormGroup\r\n   * @private\r\n   * @memberof LoginComponent\r\n   */\r\n  private initLoginForm() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  /**\r\n   * initSignForm\r\n   * Init signUpForm FormGroup\r\n   * @private\r\n   * @memberof LoginComponent\r\n   */\r\n  private initSignUpForm() {\r\n    this.signUpForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      confirm: new FormControl('', [Validators.required, Validators.minLength(8)])\r\n    }, { validators: this.checkPasswords });\r\n  }\r\n\r\n  /**\r\n   * checkPasswords\r\n   * Validator confirm password\r\n   * @private\r\n   * @param {FormGroup} group\r\n   * @returns\r\n   * @memberof LoginComponent\r\n   */\r\n  private checkPasswords(group: FormGroup) {\r\n    const pass = group.get(Common.KEYS.password).value;\r\n    const confirmPass = group.get(Common.KEYS.confirm).value;\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n\r\n  /**\r\n   * loginWithSocialNetwork\r\n   * Call API to save user data\r\n   * @private\r\n   * @memberof LoginComponent\r\n   */\r\n  private loginWithSocialNetwork() {\r\n    this.authSocialService.authState.subscribe((user: SocialUser) => {\r\n      if (user) {\r\n        this.authService.setProfile(user);\r\n        let url: string;\r\n        if (user.provider === GoogleLoginProvider.PROVIDER_ID) {\r\n          url = Common.API.googleLogin;\r\n        } else {\r\n          url = Common.API.facebookLogin;\r\n        }\r\n        this.apiService.senPostRequest(url, {access_token: user.authToken})\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((data: CustomeResponse) => {\r\n            if (data.status === ApiStatus.SUCCESS) {\r\n              // Save token and redirect to Home\r\n              this.authService.setToken(data.token);\r\n              this.authService.isNotRefresh = true;\r\n              this.router.navigate([Common.PATHS.home]);\r\n            } else {\r\n              // Show error message\r\n              this.errorMsg = data.message;\r\n            }\r\n          });\r\n      } else {\r\n        this.authService.setProfile(null);\r\n        this.authService.removeToken();\r\n        this.router.navigate([Common.PATHS.login]);\r\n        // location.href = '/' + Common.PATHS.login;\r\n      }\r\n    });\r\n  }\r\n\r\n  public get formLoginControls() { return this.loginForm.controls; }\r\n\r\n  public get formSignUpControls() { return this.signUpForm.controls; }\r\n}\r\n","<div class=\"row main-area\">\r\n  <div class=\"login-box\">\r\n    <div class=\"col-12\">\r\n      <img class=\"logo\" src=\"../../../assets/images/logo_hz.png\" alt=\"\">\r\n    </div>\r\n\r\n    <!-- Tab -->\r\n    <div class=\"lb-header\">\r\n      <a class=\"{{ isLogin ? 'active' : '' }}\" id=\"login-box-link\" (click)=\"changeAction()\">Login</a>\r\n      <a class=\"{{ !isLogin ? 'active' : '' }}\" id=\"signup-box-link\" (click)=\"changeAction()\">Sign Up</a>\r\n    </div>\r\n\r\n    <!-- Login with social network -->\r\n    <div class=\"social-login\">\r\n      <a (click)=\"signInWithFB()\" class=\"login-facebook cursor-pointer\" title=\"Signin with Facebook\">\r\n        <i class=\"fa fa-facebook fa-lg\"></i>\r\n        Facebook\r\n      </a>\r\n      <a (click)=\"signInWithGoogle()\" class=\"login-google cursor-pointer\" title=\"Signin with Google\">\r\n        <i class=\"fa fa-google-plus fa-lg\"></i>\r\n        Google\r\n      </a>\r\n    </div>\r\n\r\n    <!-- Login form -->\r\n    <form [formGroup]=\"loginForm\" class=\"email-login\" [hidden]=\"!isLogin\" (ngSubmit)=\"login()\">\r\n      <!-- Error message -->\r\n      <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\r\n\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" id=\"login_email\" />\r\n        <div *ngIf=\"formLoginControls.email.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formLoginControls.email.errors.required\">This field is required</div>\r\n          <div *ngIf=\"formLoginControls.email.errors.email\">Invalid email address</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" id=\"login-pass\" />\r\n        <div *ngIf=\"formLoginControls.password.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formLoginControls.password.errors.required\">This field is required</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <button type=\"submit\" class=\"btn btn-success\">Log in</button>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <a [routerLink]=\"['/reset-password']\" class=\"forgot-password\">Forgot password?</a>\r\n      </div>\r\n    </form>\r\n\r\n    <!-- Sign Up form -->\r\n    <form [formGroup]=\"signUpForm\" class=\"email-signup\" [hidden]=\"isLogin\" (ngSubmit)=\"signUp()\">\r\n      <!-- Error message -->\r\n      <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\r\n\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        <div *ngIf=\"formSignUpControls.email.touched && formSignUpControls.email.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formSignUpControls.email.errors.required\">This field is required</div>\r\n          <div *ngIf=\"formSignUpControls.email.errors.email\">Invalid email address</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        <div *ngIf=\"formSignUpControls.password.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formSignUpControls.password.errors.required\">This field is required</div>\r\n          <div *ngIf=\"formSignUpControls.password.errors.minLength\">Password requires at least 8 alphanumeric characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <input formControlName=\"confirm\" type=\"password\" placeholder=\"Confirm Password\" />\r\n      </div>\r\n      <div class=\"u-form-group\">\r\n        <button type=\"submit\" class=\"btn btn-success\">Sign Up</button>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  profile works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [ProfileComponent]\r\n})\r\nexport class ProfileModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  register works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [RegisterComponent]\r\n})\r\nexport class RegisterModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  reset-password works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [ResetPasswordComponent]\r\n})\r\nexport class ResetPasswordModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Common } from 'src/app/commons/common';\r\nimport { ApiStatus } from 'src/app/commons/enum/api-status.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'Unknown error!';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side errors\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side errors\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    if (error.status === ApiStatus.AUTH_FAIL) {\r\n      localStorage.clear();\r\n      location.href = '/' + Common.PATHS.login;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  public sendGetRequest(url: string) {\r\n    return this.httpClient.get(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public senPostRequest(url: string, requesData: any) {\r\n    return this.httpClient.post(url, requesData, { headers: this.authService.noAuthHeaders() }).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public senPostRequestAuth(url: string, requesData: any) {\r\n    return this.httpClient.post(url, requesData, { headers: this.authService.authHeaders() }).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n","// Angular modules\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\n// Services\r\nimport { AuthService } from './auth.service';\r\n\r\n// Commons\r\nimport { Common } from './../../commons/common';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate([Common.PATHS.login]);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkAuthOut(): void {\r\n    if (this.auth.isAuthenticated()) {\r\n      this.router.navigate([Common.PATHS.home]);\r\n    }\r\n  }\r\n}\r\n","// Angular modules\r\nimport { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nimport { SocialUser } from 'angularx-social-login';\r\n\r\n// Commons\r\nimport { Common } from './../../commons/common';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  private profile: SocialUser;\r\n  public isNotRefresh: boolean;\r\n  constructor(public jwtHelper: JwtHelperService) { }\r\n\r\n  public isAuthenticated(): boolean {\r\n    const token = this.getToken();\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n  public noAuthHeaders() {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    return headers;\r\n  }\r\n\r\n  public authHeaders() {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('Content-Type', 'application/json');\r\n    headers = headers.append('Authorization', 'JWT ' + this.getToken());\r\n    return headers;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    localStorage.setItem(Common.KEYS.token, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem(Common.KEYS.token);\r\n  }\r\n\r\n  public removeToken() {\r\n    localStorage.removeItem(Common.KEYS.token);\r\n    localStorage.removeItem(Common.KEYS.profile);\r\n  }\r\n\r\n  public setProfile(profile: SocialUser) {\r\n    localStorage.setItem(Common.KEYS.profile, JSON.stringify(profile));\r\n    this.profile = profile;\r\n  }\r\n\r\n  public getProfile(): SocialUser {\r\n    if (!this.profile) {\r\n      this.profile = JSON.parse(localStorage.getItem(Common.KEYS.profile));\r\n    }\r\n    return this.profile;\r\n  }\r\n}\r\n","// Angular module\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\nimport decode from 'jwt-decode';\r\n\r\n// Services\r\nimport { AuthService } from './auth.service';\r\n\r\n// Commons\r\nimport { Common } from './../../commons/common';\r\n\r\n@Injectable()\r\nexport class RoleGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    // this will be passed from the route config\r\n    // on the data property\r\n    const expectedRole = route.data.expectedRole;\r\n    const token = localStorage.getItem(Common.KEYS.token);\r\n\r\n    if (!token) {\r\n      this.router.navigate([Common.PATHS.login]);\r\n      return false;\r\n    }\r\n\r\n    // decode the token to get its payload\r\n    const tokenPayload = decode(token);\r\n    if (\r\n      !this.auth.isAuthenticated() ||\r\n      tokenPayload.role !== expectedRole\r\n    ) {\r\n      this.router.navigate([Common.PATHS.login]);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}